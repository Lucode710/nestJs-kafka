version: '3'

services:

  api-gateway:
    build: 
      context: api-gateway
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - broker
    networks:
      - backend
    restart: unless-stopped
    

  auth-service:
    build: 
      context: auth-service
      dockerfile: Dockerfile
    depends_on:
      - broker
    networks:
      - backend
    restart: unless-stopped

  # zookeeper:
  #     image: zookeeper:3.9.1
  #     restart: always
  #     ports:
  #       - "2181:2181"
  #     environment:
  #       - ALLOW_ANONYMOUS_LOGIN=yes
  #       - ZOOKEEPER_CLIENT_PORT=2181
  
  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://broker:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    networks:
      - backend

networks:
  backend:
    driver: bridge
